{"ast":null,"code":"var _jsxFileName = \"/home/anatd/Naomi/northcoders/week9/fe-nc-news/src/components.js/Comments.jsx\";\nimport React, { Component } from 'react';\nimport * as api from '../api';\nimport CommentCard from '.';\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isLoading: true\n    };\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (this.state.isLoading) {\n      return React.createElement(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\",\n        alt: \"loading...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    }\n\n    console.log(this.state);\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"comment-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.comments.map(comment => {\n      return React.createElement(CommentCard, {\n        article_id: this.props.article_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    })));\n  }\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n  fetchComments() {\n    const article_id = this.props.article_id;\n    api.getComments(article_id).then(({\n      data: {\n        comments\n      }\n    }) => this.setState({\n      comments,\n      isLoading: false\n    }));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/anatd/Naomi/northcoders/week9/fe-nc-news/src/components.js/Comments.jsx"],"names":["React","Component","api","CommentCard","Comments","state","comments","isLoading","render","console","log","props","map","comment","article_id","componentDidMount","fetchComments","getComments","then","data","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,OAAOC,WAAP,MAAwB,GAAxB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADuB;AAAA;;AAK/BC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;;AACA,QAAI,KAAKN,KAAL,CAAWE,SAAf,EAAyB;AACvB,aAAO;AAAK,QAAA,GAAG,EAAC,sEAAT;AAAgF,QAAA,GAAG,EAAC,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAG,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,KAAL,CAAWC,QAAX,CAAoBM,GAApB,CAAwBC,OAAO,IAAI;AAClC,aACE,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAI,KAAKF,KAAL,CAAWG,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJA,CADH,CADF,CADF;AAWD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AAEDA,EAAAA,aAAa,GAAG;AAAA,UACPF,UADO,GACO,KAAKH,KADZ,CACPG,UADO;AAEdZ,IAAAA,GAAG,CAACe,WAAJ,CAAgBH,UAAhB,EAA4BI,IAA5B,CAAiC,CAAC;AAACC,MAAAA,IAAI,EAAE;AAACb,QAAAA;AAAD;AAAP,KAAD,KAAwB,KAAKc,QAAL,CAAc;AAACd,MAAAA,QAAD;AAAWC,MAAAA,SAAS,EAAE;AAAtB,KAAd,CAAzD;AACE;;AA/B2B;;AAkCjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as api from '../api'\nimport CommentCard from '.'\n\nclass Comments extends Component {\n  state = {\n    comments: [],\n    isLoading: true,\n  }\n  render() {\n    console.log(this.props)\n    if (this.state.isLoading){\n      return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading...\"/>\n    } \n\n    console.log(this.state)\n    return (\n      <main>\n        <ul id = \"comment-list\">\n          {this.state.comments.map(comment => {\n            return (\n              <CommentCard article_id = {this.props.article_id}/>\n            )\n          })}\n        </ul>\n      </main>\n    );\n  }\n  componentDidMount() {\n    this.fetchComments()\n  }\n\n  fetchComments() {\n    const {article_id} = this.props\n    api.getComments(article_id).then(({data: {comments}}) => this.setState({comments, isLoading: false})\n    )}\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}