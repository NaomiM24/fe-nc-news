{"ast":null,"code":"var _jsxFileName = \"/home/anatd/Naomi/northcoders/week9/fe-nc-news/src/components.js/ArticlesList.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport ArticleCard from './ArticleCard';\nimport * as api from '../api';\n\nclass ArticlesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      author: '',\n      topic: '',\n      sort_by: null,\n      order: null,\n      isLoading: true,\n      error: null\n    };\n\n    this.handleSelectChange = event => {\n      const sort_by = event.target.value;\n      this.setState({\n        sort_by\n      });\n    };\n\n    this.handleClick = event => {\n      const order = event.target.value;\n      this.setState({\n        order\n      });\n    };\n  }\n\n  render() {\n    //console.log(this.state.articles)\n    if (this.state.isLoading) {\n      return React.createElement(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\",\n        alt: \"loading...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Sort By:\", React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"created_at\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"option\", {\n      value: \"votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Votes\"), React.createElement(\"option\", {\n      value: \"comment_count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Comment Count\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Order By: Ascending\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"order\",\n      value: \"asc\",\n      defaultChecked: true,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \"Descending\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"order\",\n      value: \"desc\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      id: \"article-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.articles.map(article => {\n      return (// <Link key={article.article_id} to={`/articles/${article.article_id}`}> \n        React.createElement(ArticleCard, {\n          article: article,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })\n        /* </Link> */\n\n      );\n    })));\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //console.log(this.state.order)\n    if (prevProps.topicName !== this.props.topicName || prevProps.authorName !== this.props.authorName || prevState.sort_by !== this.state.sort_by || prevState.order !== this.state.order) this.fetchArticles();\n  }\n\n  fetchArticles() {\n    const _this$props = this.props,\n          topicName = _this$props.topicName,\n          authorName = _this$props.authorName;\n    const _this$state = this.state,\n          sort_by = _this$state.sort_by,\n          order = _this$state.order;\n    api.getAllArticles(topicName, authorName, sort_by, order).then(({\n      data: {\n        articles\n      }\n    }) => {\n      this.setState({\n        articles,\n        isLoading: false,\n        topic: topicName,\n        author: authorName,\n        sort_by,\n        order\n      }).catch(error => {\n        this.setState({});\n      });\n    });\n  }\n\n}\n\nexport default ArticlesList;","map":{"version":3,"sources":["/home/anatd/Naomi/northcoders/week9/fe-nc-news/src/components.js/ArticlesList.jsx"],"names":["React","Component","Link","ArticleCard","api","ArticlesList","state","articles","author","topic","sort_by","order","isLoading","error","handleSelectChange","event","target","value","setState","handleClick","render","map","article","componentDidMount","fetchArticles","componentDidUpdate","prevProps","prevState","topicName","props","authorName","getAllArticles","then","data","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from '@reach/router'\nimport ArticleCard from './ArticleCard';\nimport * as api from '../api';\n\nclass ArticlesList extends Component {\n  state = {\n    articles: [],\n    author: '',\n    topic: '',\n    sort_by: null,\n    order: null,\n    isLoading: true,\n    error: null,\n  }\n  render() {\n    //console.log(this.state.articles)\n    if (this.state.isLoading){\n      return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading...\"/>\n    } \n     \n    return (\n      <div>\n        <form>\n          <label>\n            Sort By:\n            <select onChange={this.handleSelectChange}>\n            <option value=\"created_at\">Date</option>\n            <option value=\"votes\">Votes</option>\n            <option value=\"comment_count\">Comment Count</option>\n            </select>\n          </label>\n          <label>\n            Order By:\n            Ascending<input type=\"radio\" name=\"order\" value=\"asc\" defaultChecked onClick={this.handleClick}/>\n            Descending<input type=\"radio\" name=\"order\" value=\"desc\" onClick={this.handleClick}/>\n          </label>\n        </form>\n        <ul id = \"article-list\">\n          {this.state.articles.map(article => {\n            return (\n              // <Link key={article.article_id} to={`/articles/${article.article_id}`}> \n                <ArticleCard article={article} />\n              /* </Link> */            \n            )       \n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  \n  componentDidMount() {\n    this.fetchArticles()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //console.log(this.state.order)\n    if (prevProps.topicName !== this.props.topicName ||prevProps.authorName !== this.props.authorName ||prevState.sort_by !== this.state.sort_by ||prevState.order !== this.state.order)\n    this.fetchArticles()\n  }\n\n  fetchArticles() {\n    const {topicName, authorName} = this.props\n    const {sort_by, order} = this.state\n    api.getAllArticles(topicName, authorName, sort_by,\n      order)\n    .then(({data: {articles}}) => {\n      this.setState({articles, isLoading: false, topic: topicName, author: authorName, sort_by,\n        order})\n    .catch(error => {\n      this.setState({})\n    })\n    })\n  }\n\n  handleSelectChange = (event) => {\n    const sort_by = event.target.value;\n    this.setState({sort_by})\n  }\n\n  handleClick = (event) => {\n    const order = event.target.value;\n    this.setState({order})\n  }\n}\n\nexport default ArticlesList;"]},"metadata":{},"sourceType":"module"}