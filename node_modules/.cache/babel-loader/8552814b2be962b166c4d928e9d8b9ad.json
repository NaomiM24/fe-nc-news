{"ast":null,"code":"var _jsxFileName = \"/home/anatd/Naomi/northcoders/week9/fe-nc-news/src/components.js/CommentRemover.jsx\";\nimport React, { Component } from 'react';\nimport * as api from '../api';\n\nclass CommentRemover extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: {\n        status: null,\n        msg: ''\n      }\n    };\n\n    this.handleClick = () => {\n      const _this$props = this.props,\n            comment_id = _this$props.comment_id,\n            removeComments = _this$props.removeComments;\n      api.deleteComment(comment_id).then(() => {\n        this.props.handleDeletedMessage('Message Successfully Deleted');\n      }).catch(error => {\n        return this.props.handleDeletedMessage('status: 500, your comment could not be deleted at this time, please try again later') // this.setState({vote: 0, error:{status: 500, msg: 'your comment could not be deleted at this time, please try again later'}})\n        ;\n      });\n      removeComments(comment_id);\n    };\n  }\n\n  render() {\n    const _this$state$error = this.state.error,\n          status = _this$state$error.status,\n          msg = _this$state$error.msg;\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      className: \"comment-remover\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Remove Comment\"), status !== null && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Error\", status, \"! \", msg));\n  }\n\n}\n\n;\nexport default CommentRemover;","map":{"version":3,"sources":["/home/anatd/Naomi/northcoders/week9/fe-nc-news/src/components.js/CommentRemover.jsx"],"names":["React","Component","api","CommentRemover","state","error","status","msg","handleClick","props","comment_id","removeComments","deleteComment","then","handleDeletedMessage","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;;AAGA,MAAMC,cAAN,SAA6BF,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,IADH;AAELC,QAAAA,GAAG,EAAE;AAFA;AADD,KAD4B;;AAAA,SAgBlCC,WAhBkC,GAgBpB,MAAK;AAAA,0BACoB,KAAKC,KADzB;AAAA,YACVC,UADU,eACVA,UADU;AAAA,YACEC,cADF,eACEA,cADF;AAEjBT,MAAAA,GAAG,CAACU,aAAJ,CAAkBF,UAAlB,EAA8BG,IAA9B,CAAmC,MAAM;AACvC,aAAKJ,KAAL,CAAWK,oBAAX,CAAgC,8BAAhC;AACD,OAFD,EAGCC,KAHD,CAGOV,KAAK,IAAI;AAChB,eACE,KAAKI,KAAL,CAAWK,oBAAX,CAAgC,qFAAhC,CADF,CAEE;AAFF;AAIA,OARA;AASAH,MAAAA,cAAc,CAACD,UAAD,CAAd;AACH,KA5BmC;AAAA;;AAOpCM,EAAAA,MAAM,GAAG;AAAA,8BACe,KAAKZ,KAAL,CAAWC,KAD1B;AAAA,UACAC,MADA,qBACAA,MADA;AAAA,UACQC,GADR,qBACQA,GADR;AAEP,WACE,0CACC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEGF,MAAM,KAAK,IAAZ,IAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASA,MAAT,QAAmBC,GAAnB,CAFvB,CADF;AAMC;;AAfiC;;AA8BrC;AAED,eAAeJ,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as api from '../api';\n\n\nclass CommentRemover extends Component{\n  state = {\n    error: {\n      status: null,\n      msg: '',\n    }\n  }\n  render() {\n    const {status, msg} = this.state.error\n    return (\n      <>\n       <button className=\"comment-remover\" onClick={this.handleClick}>Remove Comment</button>\n       {(status !== null) && <p>Error{status}! {msg}</p>}\n      </>\n      );\n    }\n    handleClick = () =>{\n      const {comment_id, removeComments} = this.props\n      api.deleteComment(comment_id).then(() => {\n        this.props.handleDeletedMessage('Message Successfully Deleted')\n      })\n      .catch(error => {\n      return(\n        this.props.handleDeletedMessage('status: 500, your comment could not be deleted at this time, please try again later')\n        // this.setState({vote: 0, error:{status: 500, msg: 'your comment could not be deleted at this time, please try again later'}})\n        )\n     })\n      removeComments(comment_id)\n  }\n  \n};\n\nexport default CommentRemover;"]},"metadata":{},"sourceType":"module"}