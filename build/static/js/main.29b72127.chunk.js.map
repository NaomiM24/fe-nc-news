{"version":3,"sources":["css modules/Nav.module.css","code.svg","football.svg","cooking.svg","css modules/SelectUser.module.css","home-icon.svg","bin.svg","components.js/Header.jsx","api.js","components.js/VotesChange.jsx","components.js/ArticleCard.jsx","components.js/ErrorPage.jsx","components.js/ArticlesList.jsx","components.js/Home.jsx","components.js/ArticlesByTopic.jsx","components.js/ArticlesByAuthor.jsx","components.js/Toggle.jsx","components.js/CommentRemover.jsx","components.js/CommentCard.jsx","components.js/Comments.jsx","components.js/CommentAdder.jsx","components.js/SingleArticle.jsx","components.js/SelectUser.jsx","components.js/Topics.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","selectedUser","to","className","styles","home","src","alt","baseURL","updateVotes","type","id","number","axios","patch","inc_votes","getUser","user_id","get","addComment","article_id","username","body","post","deleteComment","comment_id","delete","VotesChange","state","vote","error","status","msg","handleClick","event","setState","target","value","this","props","onClick","disabled","prevProps","prevState","api","catch","Component","ArticleCard","user","article","date","created_at","split","ukDate","time","ArticleLink","AuthorLink","author","TopicLink","topic","title","avatar_url","football","cooking","code","comment_count","votes","fetchUser","then","data","ErrorPage","ArticlesList","articles","sort_by","order","isLoading","handleSelectChange","onChange","name","map","key","fetchArticles","topicName","authorName","params","err","response","Home","ArticlesByTopic","ArticlesByAuthor","Toggle","showContent","displayContent","currentState","children","buttonName","CommentRemover","removeComments","handleDeletedMessage","bin","CommentCard","comment","Comments","comments","deleted_message","filter","fetchComments","posted_comment","CommentAdder","handleChange","handleSubmit","preventDefault","handleCreatedMessage","handlePostedComment","onSubmit","required","placeholder","SingleArticle","created_message","fetchData","SelectUser","users","selectuser","text","handleUserChange","Topics","ul","li","App","path","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29b72127.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Nav_ul__24Jpq\",\"li\":\"Nav_li__3R7K4\"};","module.exports = __webpack_public_path__ + \"static/media/code.cedc27e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/football.050bd8a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/cooking.35324778.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectuser\":\"SelectUser_selectuser__-wSUe\",\"text\":\"SelectUser_text__1lAIu\"};","module.exports = __webpack_public_path__ + \"static/media/home-icon.133ce3f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin.650cdc57.svg\";","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport styles from \"../css modules/Header.module.css\";\nimport home from \"../home-icon.svg\";\n\nconst Header = ({selectedUser}) => {\n  return (\n    <header>\n      <Link to=\"/\" className={styles.home}>\n        <img src={home} alt=\"Home\" />\n      </Link>\n      <h1>northcoders news</h1>\n\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from 'axios'\n\nconst baseURL = 'https://naomi-be-news.herokuapp.com/api'\n\nexport const getAllArticles = (topicName,  authorName, sort_by, order) => {\n  return axios.get(`${baseURL}/articles`, {\n    params: {\n      topic: topicName,\n      author: authorName,\n      sort_by,\n      order\n    }\n  })\n}\n\nexport const getSingleArticle = (article_id) => {\n  return axios.get(`${baseURL}/articles/${article_id}`)\n}\n\nexport const getComments = (article_id, sort_by, order) => {\n  return axios.get(`${baseURL}/articles/${article_id}/comments`, {\n    params: {\n      sort_by,\n      order\n    }\n  })\n}\n\nexport const updateCommentVotes = (comment_id, number) => {\n  return axios.patch(`${baseURL}/comments/${comment_id}`, {\n      inc_votes: number\n  })\n}\n\nexport const updateArticleVotes = (article_id, number) => {\n  return axios.patch(`${baseURL}/articles/${article_id}`, {\n      inc_votes: number\n  })\n}\n\nexport const updateVotes = (type, id, number) => {\n  return axios.patch(`${baseURL}/${type}/${id}`, {\n      inc_votes: number\n  })\n}\n\n\nexport const getUser = (user_id) => {\n  return axios.get(`${baseURL}/users/${user_id}`,)\n}\n\nexport const getAllUsers = () => {\n  return axios.get(`${baseURL}/users`)\n}\n\nexport const addComment = (article_id, username, body) => {\n  return axios.post(`${baseURL}/articles/${article_id}/comments`,{\n    username,\n    body\n  })\n}\n\nexport const deleteComment = (comment_id) => {\n  return axios.delete(`${baseURL}/comments/${comment_id}`)\n}","import React, { Component } from \"react\";\nimport * as api from \"../api\";\n\nclass VotesChange extends Component {\n  state = {\n    vote: 0,\n    error: {\n      status: null,\n      msg: \"\"\n    }\n  };\n\n  render() {\n    const { status, msg } = this.state.error;\n    const { vote } = this.props;\n\n    return (\n      <div>\n        <button\n          id=\"like\"\n          className={\"has-been-\" + (this.state.vote === 1 && \"liked\")}\n          value={1}\n          onClick={this.handleClick}\n          disabled={this.state.vote === 1 ? true : false}\n        >\n          ⇧\n        </button>\n        <br />\n        {vote + +this.state.vote}\n        <br />\n        <button\n          id=\"dislike\"\n          value={-1}\n          onClick={this.handleClick}\n          disabled={this.state.vote === -1 ? true : false}\n        >\n          ⇩\n        </button>\n        {status !== null && (\n          <p>\n            Error {status}! {msg}\n          </p>\n        )}\n      </div>\n    );\n  }\n\n  handleClick = event => {\n    this.state.vote === 0\n      ? this.setState({ vote: event.target.value })\n      : this.setState({ vote: 0 });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { id, type } = this.props;\n\n    if (+this.state.vote === 0 && +prevState.vote !== 0) {\n      const vote = -+prevState.vote;\n      api.updateVotes(type, id, vote).catch(error => {\n        return this.setState({\n          vote: 0,\n          error: {\n            status: 500,\n            msg: \"cancel vote did not work at this time, please try again later\"\n          }\n        });\n      });\n    } else if (prevState.vote !== this.state.vote) {\n      const { vote } = this.state;\n      api.updateVotes(type, id, vote).catch(error => {\n        return this.setState({\n          vote: 0,\n          error: {\n            status: 500,\n            msg: \"voting did not work, please try again later\"\n          }\n        });\n      });\n    }\n  }\n}\n\nexport default VotesChange;\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport { Link } from \"@reach/router\";\nimport VotesChange from \"./VotesChange\";\nimport code from \"../code.svg\";\nimport football from \"../football.svg\";\nimport cooking from \"../cooking.svg\";\n\nclass ArticleCard extends Component {\n  state = {\n    user: {}\n  };\n\n  render() {\n    const { article } = this.props;\n    const date = article.created_at.split(\"T\");\n    const ukDate = date[0].split(\"-\");\n    const time = date[1].split(\":\");\n    const ArticleLink = `/articles/${article.article_id}`;\n    const AuthorLink = `/authors/${article.author}`;\n    const TopicLink = `/topics/${article.topic}`;\n    return (\n      <div className=\"article-card\">\n        <li>\n          <Link to={ArticleLink} className=\"article-card-title\">\n          <h2>\n            {article.title}\n            <hr/>\n          </h2>\n          </Link>\n          <div className=\"article-card-user\">\n            <Link to={AuthorLink}>\n              <img\n                src={this.state.user.avatar_url}\n                alt=\"user avatar\"\n                className=\"avatar\"\n              />\n            </Link>\n          </div>\n          <div className=\"article-card-topic\">\n            <Link to={TopicLink}>\n              {article.topic === \"football\" ? (\n                <img src={football} alt=\"football\" />\n              ) : article.topic === \"cooking\" ? (\n                <img src={cooking} alt=\"cooking\" />\n              ) : (\n                <img src={code} alt=\"code\" />\n              )}\n            </Link>\n          </div>\n          <p>\n            {article.comment_count} comments\n            <br />\n            published on {ukDate[2]}-{ukDate[1]}-{ukDate[0]} at {time[0]}:\n            {time[1]}\n          </p>\n          <h4 className=\"article-card-votes\">\n            <VotesChange\n              id={article.article_id}\n              vote={article.votes}\n              type={\"articles\"}\n            />\n          </h4>\n        </li>\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser() {\n    const { author } = this.props.article;\n    api.getUser(author).then(({ data: { user } }) => this.setState({ user }));\n  }\n}\n\nexport default ArticleCard;\n","import React from \"react\";\n\nconst ErrorPage = ({ msg, status }) => {\n  return (\n    <main>\n      <h2> Error: {status} </h2>\n      <h3> {msg} </h3>\n    </main>\n  );\n};\n\nexport default ErrorPage;\n","import React, { Component } from \"react\";\nimport ArticleCard from \"./ArticleCard\";\nimport * as api from \"../api\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ArticlesList extends Component {\n  state = {\n    articles: [],\n    author: \"\",\n    topic: \"\",\n    sort_by: null,\n    order: null,\n    isLoading: true,\n    error: null\n  };\n  render() {\n    const { isLoading, error } = this.state;\n    if (isLoading) {\n      return (\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"\n          alt=\"loading...\"\n        />\n      );\n    }\n    if (error !== null) {\n      return <ErrorPage msg={error.data.msg} status={error.status} />;\n    }\n\n    return (\n      <div className=\"articles-list\">\n        <form>\n          <label>\n            Sort By:\n            <select onChange={this.handleSelectChange} className=\"dropDown\">\n              <option value=\"created_at\">Date</option>\n              <option value=\"votes\">Votes</option>\n              <option value=\"comment_count\">Comment Count</option>\n            </select>\n          </label>\n          <br />\n          <label>Order By: </label>\n          Ascending\n          <input\n            type=\"radio\"\n            name=\"order\"\n            value=\"asc\"\n            onClick={this.handleClick}\n          />\n          Descending\n          <input\n            type=\"radio\"\n            name=\"order\"\n            value=\"desc\"\n            onClick={this.handleClick}\n          />\n        </form>\n        <ul id=\"article-list\">\n          {this.state.articles.map(article => {\n            return <ArticleCard article={article} key={article.article_id} />;\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.topicName !== this.props.topicName ||\n      prevProps.authorName !== this.props.authorName ||\n      prevState.sort_by !== this.state.sort_by ||\n      prevState.order !== this.state.order\n    )\n      this.fetchArticles();\n  }\n\n  fetchArticles() {\n    const { topicName, authorName } = this.props;\n    const { sort_by, order } = this.state;\n    api\n      .getAllArticles(topicName, authorName, sort_by, order)\n      .then(({ data: { articles } }) => {\n        this.setState({\n          articles,\n          isLoading: false,\n          topic: topicName,\n          author: authorName,\n          sort_by,\n          order\n        });\n      })\n      .catch(error => {\n        const err = error.response;\n        this.setState({ error: err, isLoading: false });\n      });\n  }\n\n  handleSelectChange = event => {\n    const sort_by = event.target.value;\n    this.setState({ sort_by });\n  };\n\n  handleClick = event => {\n    const order = event.target.value;\n    this.setState({ order });\n  };\n}\n\nexport default ArticlesList;\n","import React from \"react\";\nimport ArticlesList from \"./ArticlesList\";\n\nconst Home = () => {\n  return (\n    <main className=\"homepage\">\n      <ArticlesList />\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport ArticlesList from \"./ArticlesList\";\n\nclass ArticlesByTopic extends Component {\n  render() {\n    return (\n      <main>\n        <h2 className=\"topic\">all articles in {this.props.topicName} </h2>\n        <ArticlesList topicName={this.props.topicName} />\n      </main>\n    );\n  }\n}\n\nexport default ArticlesByTopic;\n","import React, { Component } from 'react';\nimport ArticlesList from './ArticlesList';\n\nclass ArticlesByAuthor extends Component {\n  render() {\n    return (\n      <div>\n        <h2>All articles by  {this.props.authorName} </h2>\n        <ArticlesList authorName={this.props.authorName}/>\n      </div>\n    );\n  }\n}\n\nexport default ArticlesByAuthor;","import React, { Component } from \"react\";\n\nclass Toggle extends Component {\n  state = {\n    showContent: false\n  };\n  render() {\n    return (\n      <div>\n        {this.state.showContent && this.props.children}\n        <button onClick={this.displayContent}>{this.props.buttonName}</button>\n      </div>\n    );\n  }\n  displayContent = () => {\n    this.setState(currentState => {\n      return { showContent: !currentState.showContent };\n    });\n  };\n}\n\nexport default Toggle;\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport bin from \"../bin.svg\";\n\nclass CommentRemover extends Component {\n  state = {\n    error: {\n      status: null,\n      msg: \"\",\n      isLoading: false\n    }\n  };\n  render() {\n    const { isLoading } = this.state;\n    if (isLoading) {\n      return (\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"\n          alt=\"loading...\"\n        />\n      );\n    }\n    const { status, msg } = this.state.error;\n    return (\n      <>\n        <img\n          src={bin}\n          alt=\"remove\"\n          className=\"comment-remover\"\n          onClick={this.handleClick}\n        />\n        {status !== null && (\n          <p>\n            Error{status}! {msg}\n          </p>\n        )}\n      </>\n    );\n  }\n  handleClick = () => {\n    const { comment_id, removeComments } = this.props;\n    this.setState({ isLoading: true });\n    api\n      .deleteComment(comment_id)\n      .then(() => {\n        this.setState({ isLoading: false });\n        this.props.handleDeletedMessage(\"Comment Successfully Deleted\");\n      })\n      .catch(error => {\n        return this.props.handleDeletedMessage(\n          \"status: 500, your comment could not be deleted at this time, please try again later\"\n        );\n      });\n    removeComments(comment_id);\n  };\n}\n\nexport default CommentRemover;\n","import React, { Component } from \"react\";\nimport VotesChange from \"./VotesChange\";\nimport * as api from \"../api\";\nimport CommentRemover from \"./CommentRemover\";\nimport { Link } from \"@reach/router\";\n\nclass CommentCard extends Component {\n  state = {\n    user: {}\n  };\n  render() {\n    const { user } = this.state;\n    const { comment, selectedUser } = this.props;\n    const date = comment.created_at.split(\"T\");\n    const ukDate = date[0].split(\"-\");\n    const time = date[1].split(\":\");\n\n    return (\n      <li className=\"comment-card\">\n        <h3 className=\"comment-user\">\n          <img src={user.avatar_url} alt=\"user avatar\" className=\"avatar\" />\n          <br />\n          <Link to={`/authors/${comment.author}`}>posted by {comment.author}</Link>\n        </h3>\n        <h4 className=\"comment-votes\">\n        <VotesChange\n            type={\"comments\"}\n            id={comment.comment_id}\n            vote={comment.votes}\n          />\n        </h4>\n        <h5 className=\"comment-published-at\">\n          published on {ukDate[2]}-{ukDate[1]}-{ukDate[0]} at {time[0]}:\n          {time[1]}\n        </h5>\n        <p className=\"comment-body\">{comment.body}</p>\n        {selectedUser === comment.author && (\n          <CommentRemover\n            comment_id={comment.comment_id}\n            removeComments={this.props.removeComments}\n            handleDeletedMessage={this.props.handleDeletedMessage}\n          />\n        )}\n      </li>\n    );\n  }\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  fetchUser() {\n    const { author } = this.props.comment;\n    api.getUser(author).then(({ data: { user } }) => this.setState({ user }));\n  }\n}\n\nexport default CommentCard;\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport CommentCard from \"./CommentCard\";\n\nclass Comments extends Component {\n  state = {\n    comments: [],\n    isLoading: true,\n    order: null,\n    sort_by: null,\n    deleted_message: null,\n  };\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"\n          alt=\"loading...\"\n        />\n      );\n    }\n    return (\n      <article className=\"article-comments\">\n        <form>\n          <label>\n            Sort By:\n            <select onChange={this.handleSelectChange} className=\"dropDown\">\n              <option value=\"created_at\">Date</option>\n              <option value=\"votes\">Votes</option>\n            </select>\n          </label>\n          <br />\n          <label>\n            Order By: Ascending\n            <input\n              type=\"radio\"\n              name=\"order\"\n              value=\"asc\"\n              onClick={this.handleClick}\n            />\n            Descending\n            <input\n              type=\"radio\"\n              name=\"order\"\n              value=\"desc\"\n              onClick={this.handleClick}\n            />\n          </label>\n        </form>\n        <section>\n          {this.state.deleted_message && (\n            <p className=\"comment-message\">{this.state.deleted_message}</p>\n          )}\n          <ul id=\"comment-list\">\n            {this.state.comments.map(comment => {\n              return (\n                <>\n                  <CommentCard\n                    comment={comment}\n                    key={comment.comment_id}\n                    selectedUser={this.props.selectedUser}\n                    article_id={this.props.article_id}\n                    removeComments={this.removeComments}\n                    handleDeletedMessage={this.handleDeletedMessage}\n                  />\n                </>\n              );\n            })}\n          </ul>\n        </section>\n      </article>\n    );\n  }\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.sort_by !== this.state.sort_by ||\n      prevState.order !== this.state.order\n    )\n      this.fetchComments();\n    if (prevProps.posted_comment !== this.props.posted_comment){\n      this.setState((currentState) => {\n        return {\n          comments: [this.props.posted_comment, ...currentState.comments]}\n      })\n    }\n  }\n\n  fetchComments() {\n    const { article_id } = this.props;\n    const { sort_by, order } = this.state;\n    api\n      .getComments(article_id, sort_by, order)\n      .then(({ data: { comments } }) =>\n        this.setState({ comments, isLoading: false })\n      );\n  }\n\n  handleSelectChange = event => {\n    const sort_by = event.target.value;\n    this.setState({ sort_by });\n  };\n\n  handleClick = event => {\n    const order = event.target.value;\n    this.setState({ order });\n  };\n\n  removeComments = comment_id => {\n    this.setState(currentState => {\n      return {\n        comments: currentState.comments.filter(comment => {\n          return comment.comment_id !== comment_id;\n        })\n      };\n    });\n  };\n\n  handleDeletedMessage = event => {\n    this.setState({ deleted_message: event });\n  };\n\n}\n\n\nexport default Comments;\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\n\nclass CommentAdder extends Component {\n  state = {\n    body: \"\",\n    isLoading: false\n  };\n  render() {\n    const { isLoading } = this.state;\n    if (isLoading) {\n      return (\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"\n          alt=\"loading...\"\n        />\n      );\n    }\n    return (\n      <div>\n        \n        <form onSubmit={this.handleSubmit}>\n          <textarea\n            type=\"text\"\n            required\n            placeholder=\"What do you think?\"\n            className=\"comment-add-box\"\n            onChange={this.handleChange}\n            value={this.state.body}\n          />\n          <br />\n\n          <button>Post</button>\n          <br />\n        </form>\n      </div>\n    );\n  }\n\n  handleChange = event => {\n    this.setState({ body: event.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { article_id, user } = this.props;\n    const { body } = this.state;\n    this.setState({ isLoading: true });\n    api\n    .addComment(article_id, user, body)\n    .then(({data: {comment} }) => {\n      this.setState({ body: \"\", isLoading: false });\n      this.props.handleCreatedMessage(\"Comment Successfully Posted\");\n      this.props.handlePostedComment(comment)\n      })\n      .catch(error => {\n        return this.props.handleCreatedMessage(\n          \"status: 500, your comment could not be posted at this time, please try again later\"\n        );\n      });\n  };\n}\n\n// \n\nexport default CommentAdder;\n","import React, { Component } from \"react\";\nimport * as api from \"../api.js\";\nimport Toggle from \"./Toggle.jsx\";\nimport Comments from \"./Comments.jsx\";\nimport { Link } from \"@reach/router\";\nimport ErrorPage from \"./ErrorPage\";\nimport VotesChange from \"./VotesChange\";\nimport CommentAdder from \"./CommentAdder.jsx\";\nimport code from \"../code.svg\";\nimport football from \"../football.svg\";\nimport cooking from \"../cooking.svg\";\n\nclass SingleArticle extends Component {\n  state = {\n    article: [],\n    isLoading: true,\n    error: null,\n    created_message: null,\n    posted_comment: {}\n  };\n  render() {\n    const { isLoading, error, article } = this.state;\n\n    if (isLoading) {\n      return (\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"\n          alt=\"loading...\"\n        />\n      );\n    }\n\n    if (error !== null) {\n      return <ErrorPage msg={error.data.msg} status={error.status} />;\n    }\n\n    const AuthorLink = `/authors/${article.author}`;\n    const TopicLink = `/topics/${article.topic}`;\n\n    return (\n      <div className=\"single-article\">\n        <main>\n          <h2>{article.title}</h2>\n          <Link to={AuthorLink}>\n            <h3>by {article.author}</h3>\n          </Link>\n          <div id=\"votes\">\n            <VotesChange\n              type={\"articles\"}\n              id={article.article_id}\n              vote={article.votes}\n            />\n          </div>\n          <div id=\"topic\">\n            <Link to={TopicLink}>\n              {article.topic === \"football\" ? (\n                <img src={football} alt=\"football\" />\n              ) : article.topic === \"cooking\" ? (\n                <img src={cooking} alt=\"cooking\" />\n              ) : (\n                <img src={code} alt=\"code\" />\n              )}\n            </Link>\n          </div>\n        </main>\n        <hr/>\n        <p className=\"article-body\">{article.body}</p>\n        <hr/>\n        <h4>{article.comment_count} comments </h4>\n        <section>\n          <CommentAdder\n            article_id={article.article_id}\n            user={this.props.selectedUser}\n            handleCreatedMessage={this.handleCreatedMessage}\n            handlePostedComment={this.handlePostedComment}\n          />\n          {this.state.created_message && (\n            <p className=\"comment-message\">{this.state.created_message}</p>\n          )}\n          <br />\n          <Toggle\n            buttonName={\n              this.props.showContent ? \"Hide Comments\" : \"View Comments\"\n            }\n          >\n            <Comments\n              article_id={article.article_id}\n              selectedUser={this.props.selectedUser}\n              posted_comment={this.state.posted_comment}\n            />\n          </Toggle>\n        </section>\n      </div>\n    );\n  }\n  fetchData() {\n    api\n      .getSingleArticle(this.props.article_id)\n      .then(({ data: { article } }) => {\n        this.setState({ article, isLoading: false });\n      })\n      .catch(error => {\n        const err = error.response;\n        this.setState({ error: err, isLoading: false });\n      });\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  handleCreatedMessage = event => {\n    this.setState({ created_message: event });\n  };\n\n  handlePostedComment = event => {\n    this.setState({ posted_comment: event });\n  };\n}\n\nexport default SingleArticle;\n","import React, { Component } from \"react\";\nimport * as api from \"../api\";\nimport styles from \"../css modules/SelectUser.module.css\";\n\nclass SelectUser extends Component {\n  state = {\n    users: []\n  };\n  render() {\n    return (\n      <div className={styles.selectuser}>\n        <p className={styles.text}>Select User:</p>\n        <select className=\"dropDown\" onChange={this.props.handleUserChange}>\n          {this.state.users.map(user => {\n            return (\n              <option key={user.username} value={user.username}>\n                {user.username}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n  componentDidMount() {\n    api.getAllUsers().then(({ data: { users } }) => {\n      this.setState({ users });\n    });\n  }\n}\n\nexport default SelectUser;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport styles from \"../css modules/Nav.module.css\";\n\nconst Topics = () => {\n  return (\n    <nav>\n      <ul className={styles.ul}>\n        <li className={styles.li}>\n          <Link to=\"/topics/coding\">Coding</Link>\n        </li>\n        <li className={styles.li}>\n          <Link to=\"/topics/football\">Football</Link>\n        </li>\n        <li className={styles.li}>\n          <Link to=\"/topics/cooking\">Cooking</Link>{\" \"}\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Topics;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components.js/Header\";\nimport { Router } from \"@reach/router\";\nimport Home from \"./components.js/Home\";\nimport ArticlesByTopic from \"./components.js/ArticlesByTopic\";\nimport ArticlesByAuthor from \"./components.js/ArticlesByAuthor\";\nimport SingleArticle from \"./components.js/SingleArticle\";\nimport ErrorPage from \"./components.js/ErrorPage\";\nimport SelectUser from \"./components.js/SelectUser\";\nimport Topics from \"./components.js/Topics\";\n\nclass App extends Component {\n  state = {\n    selectedUser: \"tickle122\",\n    error: {\n      status: 404,\n      msg: \"Page not found\"\n    }\n  };\n\n  handleUserChange = event => {\n    this.setState({ selectedUser: event.target.value });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Header selectedUser={this.state.selectedUser}/>\n        <Topics />\n        <SelectUser handleUserChange={this.handleUserChange} />\n        <h2>Welcome {this.state.selectedUser}!</h2>\n        <Router>\n          <Home path=\"/\" />\n          <ArticlesByTopic path=\"/topics/:topicName\" />\n          <ArticlesByAuthor path=\"/authors/:authorName\" />\n          <SingleArticle\n            path=\"/articles/:article_id\"\n            selectedUser={this.state.selectedUser}\n          />\n          <ErrorPage\n            default\n            msg={this.state.error.msg}\n            status={this.state.error.status}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}