{"version":3,"sources":["css modules/Nav.module.css","css modules/Header.module.css","css modules/SelectUser.module.css","home-icon.svg","components.js/Header.jsx","api.js","components.js/ArticleVotesChange.jsx","components.js/ArticleCard.jsx","components.js/ErrorPage.jsx","components.js/ArticlesList.jsx","components.js/Home.jsx","components.js/ArticlesByTopic.jsx","components.js/ArticlesByAuthor.jsx","components.js/Toggle.jsx","components.js/CommentVotesChange.jsx","components.js/CommentRemover.jsx","components.js/CommentCard.jsx","components.js/Comments.jsx","components.js/CommentAdder.jsx","components.js/SingleArticle.jsx","components.js/SelectUser.jsx","components.js/Topics.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","to","className","styles","home","src","alt","title","baseURL","updateCommentVotes","comment_id","number","axios","patch","inc_votes","updateArticleVotes","article_id","getUser","user_id","get","addComment","username","body","post","deleteComment","delete","ArticleVotesChange","state","vote","error","status","msg","handleClick","event","setState","target","value","this","props","article_vote","onClick","disabled","prevProps","prevState","api","catch","Component","ArticleCard","user","article","date","created_at","split","ukDate","time","ArticleLink","AuthorLink","author","TopicLink","topic","avatar_url","comment_count","votes","fetchUser","then","data","ErrorPage","console","log","ArticlesList","articles","sort_by","order","isLoading","handleSelectChange","onChange","type","name","id","map","key","fetchArticles","topicName","authorName","params","err","response","Home","ArticlesByTopic","ArticlesByAuthor","Toggle","showContent","displayContent","currentState","children","buttonName","CommentVotesChange","inputsDisabled","comment_vote","CommentRemover","removeComments","handleDeletedMessage","CommentCard","comment","selectedUser","Comments","comments","deleted_message","filter","handleCreatedMessage","created_message","fetchComments","CommentAdder","postedComment","handleChange","handleSubmit","preventDefault","onSubmit","required","placeholder","SingleArticle","fetchData","SelectUser","users","selectuser","text","handleUserChange","Topics","ul","li","App","path","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a342f933.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Nav_ul__24Jpq\",\"li\":\"Nav_li__3R7K4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__2c8DZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectuser\":\"SelectUser_selectuser__-wSUe\",\"text\":\"SelectUser_text__1lAIu\"};","module.exports = __webpack_public_path__ + \"static/media/home-icon.133ce3f8.svg\";","import React from 'react';\nimport { Link  } from '@reach/router'\nimport styles from '../css modules/Header.module.css'\nimport home from '../home-icon.svg'\n\n\nconst Header = () => {\n  return (\n    <header>\n      <Link to=\"/\" className={styles.home}><img src={home} alt=\"Home\"/></Link>\n      <h1 className={styles.title}>northcoders news</h1>\n    </header>\n  );\n};\n\nexport default Header;    ","import axios from 'axios'\n\nconst baseURL = 'https://naomi-be-news.herokuapp.com/api'\n\nexport const getAllArticles = (topicName,  authorName, sort_by, order) => {\n  return axios.get(`${baseURL}/articles`, {\n    params: {\n      topic: topicName,\n      author: authorName,\n      sort_by,\n      order\n    }\n  })\n}\n\nexport const getSingleArticle = (article_id) => {\n  return axios.get(`${baseURL}/articles/${article_id}`)\n}\n\nexport const getComments = (article_id, sort_by, order) => {\n  return axios.get(`${baseURL}/articles/${article_id}/comments`, {\n    params: {\n      sort_by,\n      order\n    }\n  })\n}\n\nexport const updateCommentVotes = (comment_id, number) => {\n  return axios.patch(`${baseURL}/comments/${comment_id}`, {\n      inc_votes: number\n  })\n}\n\nexport const updateArticleVotes = (article_id, number) => {\n  return axios.patch(`${baseURL}/articles/${article_id}`, {\n      inc_votes: number\n  })\n}\n\nexport const getUser = (user_id) => {\n  return axios.get(`${baseURL}/users/${user_id}`,)\n}\n\nexport const getAllUsers = () => {\n  return axios.get(`${baseURL}/users`)\n}\n\nexport const addComment = (article_id, username, body) => {\n  return axios.post(`${baseURL}/articles/${article_id}/comments`,{\n    username,\n    body\n  })\n}\n\nexport const deleteComment = (comment_id) => {\n  return axios.delete(`${baseURL}/comments/${comment_id}`)\n}","import React, { Component } from \"react\";\nimport * as api from \"../api\";\n\n\nclass ArticleVotesChange extends Component {\n  state = {\n    vote: 0,\n    error: {\n      status: null,\n      msg: \"\"\n    }\n  };\n  render() {\n    const { status, msg } = this.state.error;\n\n    return (\n      <div>\n        votes: {this.props.article_vote + +this.state.vote}\n        <br />\n        <button\n          className=\"like\"\n          value={1}\n          onClick={this.handleClick}\n          disabled={this.state.vote === 1 ? true : false}\n        >\n          Like\n          \n        </button>\n        <button\n          className=\"dislike\"\n          value={-1}\n          onClick={this.handleClick}\n          disabled={this.state.vote === -1 ? true : false}\n        >\n          Dislike\n        </button>\n        \n        <button\n          className=\"cancel\"\n          value={0}\n          onClick={this.handleClick}\n          disabled={this.state.vote === 0 ? true : false}\n        >\n          Cancel Vote\n        </button>\n        {status !== null && (\n          <p>\n            Error {status}! {msg}\n          </p>\n        )}\n      </div>\n    );\n  }\n\n  handleClick = event => {\n    this.setState({ vote: event.target.value });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { article_id } = this.props;\n    if (+this.state.vote === 0 && +prevState.vote !== 0){\n      const vote = -(+prevState.vote)\n      api.updateArticleVotes(article_id, vote).catch(error => {\n        return this.setState({\n          vote: 0,\n          error: {\n            status: 500,\n            msg: \"cancel vote did not work at this time, please try again later\"\n          }\n        });\n      });\n    }\n  \n    else if (prevState.vote !== this.state.vote) {\n      const { vote } = this.state;\n      api.updateArticleVotes(article_id, vote).catch(error => {\n        return this.setState({\n          vote: 0,\n          error: {\n            status: 500,\n            msg: \"voting did not work, please try again later\"\n          }\n        });\n      });\n    }\n  }\n}\n\nexport default ArticleVotesChange;\n","import React, { Component } from 'react';\nimport * as api from '../api'\nimport { Link  } from '@reach/router'\nimport ArticleVotesChange from './ArticleVotesChange'\n\n\nclass ArticleCard extends Component {\n  state = {\n    user: {}\n  }\n\n  render() {\n    const {article} = this.props\n    const date = (article.created_at.split('T'))\n    const ukDate = date[0].split('-')\n    const time = date[1].split(':')\n    const ArticleLink = `/articles/${article.article_id}`\n    const AuthorLink = `/authors/${article.author}`\n    const TopicLink = `/topics/${article.topic}`\n    return (\n      <div className=\"article-card\">\n        <li>\n        <h2>\n          <Link to = {ArticleLink}>{article.title}</Link>\n        </h2>\n        <h3>\n        <img src={this.state.user.avatar_url} alt=\"user avatar\" className=\"avatar\" /><br/>\n          by: <Link to= {AuthorLink}> {article.author}</Link>\n          <br/>\n          in: <Link to = {TopicLink}>{article.topic}</Link>\n        </h3>\n        <p>\n          comments: {article.comment_count}\n          <br/>\n          published on {ukDate[2]}-{ukDate[1]}-{ukDate[0]} at {time[0]}:{time[1]}\n        </p>\n        <h4 className = \"article-votes\">\n          \n          <ArticleVotesChange article_id= {article.article_id} article_vote={article.votes}/>\n       </h4>\n        </li>\n    </div>\n    );\n  }\n  componentDidMount() {\n    this.fetchUser()\n  }\n\n  fetchUser() {\n    const {author} = this.props.article\n    api.getUser(author).then(({data : {user}}) =>\n    this.setState({user})\n    )}\n}\n\nexport default ArticleCard;","import React from 'react';\n\nconst ErrorPage = ({msg, status}) => {\n  console.log(msg)\n  return (\n    <main>\n      <h2> Error: {status} </h2>\n      <h3> {msg} </h3>\n    </main>\n  );\n};\n\nexport default ErrorPage;","import React, { Component } from 'react';\nimport ArticleCard from './ArticleCard';\nimport * as api from '../api';\nimport ErrorPage from './ErrorPage';\n\n\nclass ArticlesList extends Component {\n  state = {\n    articles: [],\n    author: '',\n    topic: '',\n    sort_by: null,\n    order: null,\n    isLoading: true,\n    error: null,\n  }\n  render() {\n    const {isLoading, error} = this.state\n    if (isLoading){\n      return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading...\"/>\n    } \n    if (error !== null){\n      return <ErrorPage msg={error.data.msg} status ={error.status}/>\n    }\n\n     \n    return (\n      <div className=\"articles-list\">\n       \n        <form>\n          <label>\n            Sort By:\n            <select onChange={this.handleSelectChange}className=\"dropDown\">\n            <option value=\"created_at\">Date</option>\n            <option value=\"votes\">Votes</option>\n            <option value=\"comment_count\">Comment Count</option>\n            </select>\n          </label><br/>\n          <label>\n            Order By:\n            Ascending<input type=\"radio\" name=\"order\" value=\"asc\" onClick={this.handleClick}/>\n            Descending<input type=\"radio\" name=\"order\" value=\"desc\" onClick={this.handleClick}/>\n          </label>\n        </form>\n        <ul id = \"article-list\">\n          {this.state.articles.map(article => {\n            return (\n              // <Link key={article.article_id} to={`/articles/${article.article_id}`}> \n                <ArticleCard article={article} key={article.article_id}/>\n              /* </Link> */            \n            )       \n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  \n  componentDidMount() {\n    this.fetchArticles()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //console.log(this.state.order)\n    if (prevProps.topicName !== this.props.topicName ||prevProps.authorName !== this.props.authorName ||prevState.sort_by !== this.state.sort_by ||prevState.order !== this.state.order)\n    this.fetchArticles()\n  }\n\n  fetchArticles() {\n    const {topicName, authorName} = this.props\n    const {sort_by, order} = this.state\n    api.getAllArticles(topicName, authorName, sort_by,\n      order)\n    .then(({data: {articles}}) => {\n      this.setState({articles, isLoading: false, topic: topicName, author: authorName, sort_by, order\n      })\n    })\n      .catch(error => {\n        const err = error.response\n        this.setState({error: err, isLoading: false})\n        })\n  }\n\n  handleSelectChange = (event) => {\n    const sort_by = event.target.value;\n    this.setState({sort_by})\n  }\n\n  handleClick = (event) => {\n    const order = event.target.value;\n    this.setState({order})\n  }\n}\n\nexport default ArticlesList;","import React from 'react';\nimport ArticlesList from './ArticlesList';\n\n\nconst Home = () => {\n    return (\n      <main className=\"homepage\">\n\n        <ArticlesList />\n      \n      </main>\n    );\n  }\n  \n\n\nexport default Home;","import React, { Component } from 'react';\nimport ArticlesList from './ArticlesList';\n\nclass ArticlesByTopic extends Component {\n  \n  render() {\n    return (\n      <main>\n        <h2 className=\"topic\"> {this.props.topicName} </h2>\n        <ArticlesList topicName={this.props.topicName}/>\n      </main>\n    );\n  }\n}\n\nexport default ArticlesByTopic;","import React, { Component } from 'react';\nimport ArticlesList from './ArticlesList';\n\nclass ArticlesByAuthor extends Component {\n  render() {\n    return (\n      <div>\n        <h2>All articles by  {this.props.authorName} </h2>\n        <ArticlesList authorName={this.props.authorName}/>\n      </div>\n    );\n  }\n}\n\nexport default ArticlesByAuthor;","import React, { Component } from 'react';\n\nclass Toggle extends Component {\n  state = {\n    showContent: false\n  }\n  render() {\n    return (\n      <div >\n        {(this.state.showContent) && this.props.children}\n        <button onClick={this.displayContent} >{this.props.buttonName}</button>\n      </div>\n    );\n  }\ndisplayContent = () => {\n  this.setState((currentState) => {\n    return ({showContent: !currentState.showContent})\n  })\n}\n}\n\nexport default Toggle;","import React, { Component } from 'react';\nimport * as api from '../api'\n\nclass CommentVotesChange extends Component {\n\n  state = {\n    vote: 0,\n    inputsDisabled: true,\n    error: {\n      status: null,\n      msg: '',\n    },\n  }\n\n  render() {\n \n    const {status, msg} = this.state.error\n \n    return (\n      <div>\n         votes: {this.props.comment_vote + +this.state.vote}\n         <br/>\n            <button className=\"like\" value='1' onClick={this.handleClick} disabled={ this.state.vote===1 ? true : false}>\n             Like\n            </button>        \n            <button className=\"dislike\" value=\"-1\" onClick={this.handleClick} disabled={ this.state.vote===-1 ? true : false}>\n                 Dislike\n            </button>\n            <button className=\"cancelVote\" value=\"0\" onClick={this.handleClick} disabled={ this.state.vote===0 ? true : false}>\n              Cancel Vote\n            </button>\n            {(this.state.error.status !== null) && <p>Error {status}! {msg}</p>} \n      </div>\n    );\n  }\n\n\n  handleClick = (event) => {\n    this.setState({vote: event.target.value})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { comment_id } = this.props;\n    if (+this.state.vote === 0 && +prevState.vote !== 0){\n      const vote = -(+prevState.vote)\n      api.updateCommentVotes(comment_id, vote).catch(error => {\n        return this.setState({\n          vote: 0,\n          error: {\n            status: 500,\n            msg: \"cancel vote did not work at this time, please try again later\"\n          }\n        });\n      });\n    }\n    else if (prevState.vote !== this.state.vote){\n\n      const {vote} = this.state\n      api.updateCommentVotes(comment_id, vote) \n      .catch(error => {\n        this.setState({vote: 0, error:{status: 500, msg: 'voting did not work, please try again later'}})\n      })       \n    }\n  }\n}\n\nexport default CommentVotesChange;","import React, {Component} from 'react';\nimport * as api from '../api';\n\n\nclass CommentRemover extends Component{\n  state = {\n    error: {\n      status: null,\n      msg: '',\n      isLoading: false,\n    }\n  }\n  render() {\n    const {isLoading} = this.state\n    if (isLoading){\n      return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading...\"/>\n    } \n    const {status, msg} = this.state.error\n    return (\n      <>\n       <button className=\"comment-remover\" onClick={this.handleClick}>Remove Comment</button>\n       {(status !== null) && <p>Error{status}! {msg}</p>}\n      </>\n      );\n    }\n    handleClick = () =>{\n      const {comment_id, removeComments} = this.props\n      this.setState({isLoading: true})\n      api.deleteComment(comment_id).then(() => {\n        this.setState({isLoading: false})\n        this.props.handleDeletedMessage('Message Successfully Deleted')\n      })\n      .catch(error => {\n      return(\n        this.props.handleDeletedMessage('status: 500, your comment could not be deleted at this time, please try again later')\n        // this.setState({vote: 0, error:{status: 500, msg: 'your comment could not be deleted at this time, please try again later'}})\n        )\n     })\n      removeComments(comment_id)\n  }\n  \n};\n\nexport default CommentRemover;","import React, { Component } from 'react';\nimport CommentVotesChange from './CommentVotesChange';\nimport * as api from '../api'\nimport CommentRemover from './CommentRemover';\n\n//({comment, article_id}) \nclass CommentCard extends Component {\n  state = {\n    user: {},\n\n  }\n  render() {\n    const {user} = this.state\n    const {comment, selectedUser} = this.props\n    const date = (comment.created_at.split('T'))\n    const ukDate = date[0].split('-')\n    const time = date[1].split(':')\n    return (\n      <main >\n         <li className=\"comment-card\">\n        <h3 className=\"comment-user\">\n         <img src={user.avatar_url} alt=\"user avatar\" className=\"avatar\"/>\n         <br/>\n          posted by: {comment.author}\n        </h3>\n        <h4 className = \"comment-votes\">\n          \n           <CommentVotesChange comment_id= {comment.comment_id} comment_vote={comment.votes}/>\n        </h4>\n        <h5 className = \"comment-published-at\">\n        published on {ukDate[2]}-{ukDate[1]}-{ukDate[0]} at {time[0]}:{time[1]}\n        </h5>\n        <p className = \"comment-body\">{comment.body}</p>\n        {selectedUser === comment.author && <CommentRemover  comment_id={comment.comment_id} removeComments={this.props.removeComments} handleDeletedMessage={this.props.handleDeletedMessage} />}\n       </li>\n        \n      </main>\n    );\n  }\n  componentDidMount() {\n    this.fetchUser()\n  }\n\n  fetchUser() {\n    const {author} = this.props.comment\n    api.getUser(author).then(({data : {user}}) =>\n    this.setState({user})\n    )}\n\n \n}\n\nexport default CommentCard;","import React, { Component } from 'react';\nimport * as api from '../api'\nimport CommentCard from './CommentCard'\n\n\nclass Comments extends Component {\n  state = {\n    comments: [],\n    isLoading: true,\n    order: null,\n    sort_by: null,\n    \n    deleted_message: null,\n  }\n  render() {\n  \n\n\n    if (this.state.isLoading){\n      return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading...\"/>\n    } \n    return (\n      <article className=\"article-comments\">\n      <form>\n          <label>\n            Sort By:\n            <select onChange={this.handleSelectChange}  className=\"dropDown\">\n            <option value=\"created_at\">Date</option>\n            <option value=\"votes\">Votes</option>\n            </select>\n          </label>\n          <br/>\n          <label>\n            Order By:\n            Ascending<input type=\"radio\" name=\"order\" value=\"asc\" onClick={this.handleClick}/>\n            Descending<input type=\"radio\" name=\"order\" value=\"desc\" onClick={this.handleClick}/>\n          </label>\n        </form>\n      <section>\n          {this.state.deleted_message && <p className=\"comment-message\">{this.state.deleted_message}</p>}\n        <ul id = \"comment-list\" >\n          {this.state.comments.map(comment => {\n            return (\n              <>\n              <CommentCard comment={comment} key={comment.comment_id} selectedUser={this.props.selectedUser} article_id={this.props.article_id} removeComments={this.removeComments} handleDeletedMessage={this.handleDeletedMessage} />\n              </>\n            )\n          })}\n        </ul>\n      </section>\n      </article>\n    );\n  }\n  componentDidMount() {\n    this.fetchComments()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  \n    if (prevState.sort_by !== this.state.sort_by ||prevState.order !== this.state.order)\n    this.fetchComments()\n  }\n\n  fetchComments() {\n    const {article_id} = this.props\n    const {sort_by, order} = this.state\n    api.getComments(article_id, sort_by, order).then(({data: {comments}}) => this.setState({comments, isLoading: false})\n  )}\n\n  handleSelectChange = (event) => {\n    const sort_by = event.target.value;\n    this.setState({sort_by})\n  }\n  \n  handleClick = (event) => {\n    const order = event.target.value;\n    this.setState({order})\n  }\n\n  removeComments = (comment_id) => {\n    this.setState(currentState => {\n      return{comments: currentState.comments.filter(comment => {\n        return comment.comment_id !== comment_id\n      })}\n    })\n  }\n\n  handleCreatedMessage = (event) => {\n    this.setState({created_message: event})\n  }\n\n  handleDeletedMessage = (event) => {\n    console.log(event)\n    this.setState({deleted_message: event})\n  }\n\n  \n}\n\nexport default Comments;","import React, { Component } from 'react';\nimport * as api from '../api';\n\nclass CommentAdder extends Component {\n  state = { \n    body: \"\",\n    postedComment: {},\n    isLoading: false,\n  }\n  render() {\n    const {isLoading} = this.state\n    if (isLoading){\n      return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading...\"/>\n    } \n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n            <textarea type=\"text\" required placeholder=\"What do you think?\" className=\"comment-add-box\" onChange = {this.handleChange} value={this.state.body}/>\n          <br/>\n\n          <button >Post</button>\n          <br/>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange = (event) => {\n    this.setState({body: event.target.value})\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {article_id, user} = this.props\n    const {body} = this.state\n    this.setState({isLoading: true})\n    api.addComment(article_id, user, body).then(() => {\n      this.setState({body: '', isLoading: false})\n      this.props.handleCreatedMessage('Comment Successfully Posted')\n    }).catch(error => {\n      return(\n        this.props.handleCreatedMessage('status: 500, your comment could not be posted at this time, please try again later')\n        )\n     })\n  }\n}\n\n// (({data:{comment}}) => {\n//   this.setState({body: '', postedComment: comment })\n// })\n\nexport default CommentAdder;","import React, { Component } from 'react';\nimport * as api from '../api.js'\nimport Toggle from './Toggle.jsx';\nimport Comments from './Comments.jsx';\nimport { Link  } from '@reach/router';\nimport ErrorPage from './ErrorPage';\nimport ArticleVotesChange from './ArticleVotesChange'\nimport CommentAdder from './CommentAdder.jsx';\n\nclass SingleArticle extends Component {\n  state = {\n    article: [],\n    isLoading: true,\n    error: null,\n    created_message: null,\n  };\n  render() {\n    const {isLoading, error, article} = this.state\n\n    if (isLoading){\n      return <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"loading...\"/>\n    } \n\n    if (error !== null){\n      return <ErrorPage msg={error.data.msg} status ={error.status}/>\n    }\n\n\n    const AuthorLink = `/authors/${article.author}`\n    const TopicLink = `/topics/${article.topic}`\n    return (\n      <div>\n      <main>\n        <h2>{article.title}</h2>\n        <Link to={AuthorLink}><h3>by {article.author}</h3></Link>\n        <Link to={TopicLink}><h4>in {article.topic}</h4></Link>\n        <h5 className = \"article-votes\"> <ArticleVotesChange article_id= {article.article_id} article_vote={article.votes}/>comments: {article.comment_count}</h5>\n        <p className=\"article-body\">{article.body}</p>\n      </main>\n      <section>\n        <Toggle buttonName=\"Add a Comment\">\n          <CommentAdder article_id = {article.article_id} user={this.props.selectedUser} handleCreatedMessage={this.handleCreatedMessage}/>\n        </Toggle>\n        {this.state.created_message && <p className=\"comment-message\">{this.state.created_message}</p>}\n        <br/>\n        <Toggle buttonName={this.props.showContent ? \"Hide Comments\": \"View Comments\" }>\n          <Comments article_id={article.article_id} selectedUser={this.props.selectedUser} key={1}/>\n        </Toggle>\n      </section>\n      </div>\n    );\n  }\n  fetchData() {\n    api.getSingleArticle(this.props.article_id).then(({data: {article}}) => {\n      this.setState({article, isLoading: false})\n    })\n    .catch(error => {\n      const err = error.response\n      this.setState({error: err, isLoading: false})\n    })\n  }\n  componentDidMount(){\n    this.fetchData();\n  }\n\n  handleCreatedMessage = (event) => {\n    console.log(event)\n    this.setState({created_message: event})\n  }\n}\n\nexport default SingleArticle;","import React, { Component } from 'react';\nimport * as api from '../api'\nimport styles from '../css modules/SelectUser.module.css'\n\nclass SelectUser extends Component {\n  state = {\n    users: [],\n\n  }\n  render() {\n    \n    return (\n      <div className={styles.selectuser}>\n        <label>\n          <p className={styles.text}>Select User:</p>\n          <select className=\"dropDown\" onChange={this.props.handleUserChange}>\n          {this.state.users.map(user => {\n            return (\n              <option key={user.username} value={user.username}>{user.username}</option>\n            )\n          })}\n        </select>\n        </label>\n      </div>\n    );\n  }\n  componentDidMount() {\n    api.getAllUsers().then(({data: {users}}) => {\n      this.setState({users})\n    })\n  }\n\n}\n\nexport default SelectUser;","import React from 'react';\nimport { Link  } from '@reach/router'\nimport styles from '../css modules/Nav.module.css'\n\n\nconst Topics = () => {\n  return (\n    <nav>\n      <ul className={styles.ul}>\n        <li className={styles.li}><Link to =\"/topics/coding\">Coding</Link></li>\n        <li className={styles.li}><Link to =\"/topics/football\">Football</Link></li>\n        <li className={styles.li}><Link to =\"/topics/cooking\">Cooking</Link> </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Topics;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components.js/Header';\nimport {Router} from '@reach/router'\nimport Home from './components.js/Home';\nimport ArticlesByTopic from './components.js/ArticlesByTopic';\nimport ArticlesByAuthor from './components.js/ArticlesByAuthor';\nimport SingleArticle from './components.js/SingleArticle';\nimport ErrorPage from './components.js/ErrorPage'\nimport SelectUser from './components.js/SelectUser';\nimport Topics from './components.js/Topics';\n\n\nclass App extends Component {\n  \n  state = {\n    selectedUser: 'tickle122',\n    error: {\n      status: 404,\n      msg: 'Page not found'\n    }\n  }\n\n  handleUserChange = (event) => {\n    //event.preventDefault();\n    this.setState({selectedUser: event.target.value})\n  }\n  render(){\n   \n    return (\n      <div className=\"App\">\n     <Header />\n     <Topics />\n     <SelectUser handleUserChange={this.handleUserChange}/>\n     <h2>Welcome {this.state.selectedUser}!</h2>\n    <Router>\n      <Home path='/'/>\n      <ArticlesByTopic path='/topics/:topicName'/>\n      <ArticlesByAuthor path='/authors/:authorName'/>\n      <SingleArticle path='/articles/:article_id' selectedUser={this.state.selectedUser}/>\n      <ErrorPage default msg={this.state.error.msg} status={this.state.error.status}/>\n    </Router>\n\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}